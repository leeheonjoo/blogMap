<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dao.BoardReadMapper">
	<select id="getData" resultType="com.java.boardRead.dto.BoardReadDto">
		select *
		  from category
		 where category_code='200300'
	</select>
	
	<select id="getSidoCondition" resultType="String">
		select distinct loc_sido
		  from location_info
		 order by 1
	</select>
	
	<select id="getHeaderCondition" resultType="String">
		select distinct category_mname
		  from category
		 order by 1
	</select>
	
	<select id="getGunLocationCondition" parameterType="String" resultType="String">
		select distinct nvl(loc_sigugun, 'blank')
		  from location_info
		 where loc_sido = #{siData}
		 order by 1
	</select>
	
	<select id="getDongLocationCondition" parameterType="java.util.HashMap" resultType="String">
		select distinct loc_dongri
		  from location_info
		 where loc_sido = #{siData}
		   and nvl(loc_sigugun,'%') like '%'||#{gunData}||'%'
		 order by 1
	</select>
	
	<select id="getDetailCategoryCondition" parameterType="String" resultType="String">
		select distinct category_sname
		  from category
		 where category_MName=#{headData}
		   and category_sub != '000'
		 order by 1
	</select>
	
	<select id="getboardList" parameterType="java.util.HashMap" resultType="com.java.board.dto.BoardDto">
		<![CDATA[
		select * from board
		where board_no in(select board_no from 
		board_addr_info 
		where 
		(('%'=#{board_addr_info.addr_sido} and addr_sido like '%') or ('%'<>#{board_addr_info.addr_sido} and addr_sido = #{board_addr_info.addr_sido}))
		and (('%'=#{board_addr_info.addr_sigugun} and addr_sigugun like '%') or ('%'<>#{board_addr_info.addr_sigugun} and addr_sigugun = #{board_addr_info.addr_sigugun}))
		and (('%'=#{board_addr_info.addr_dongri} and addr_dongri like '%') or ('%'<>#{board_addr_info.addr_dongri} and addr_dongri = #{board_addr_info.addr_dongri})))
		and category_code in(select category_code 
		from category 
		where category_mname like '%'||#{category.category_mname}||'%'
		and category_sname like '%'||#{category.category_sname}||'%')
		and (board_title like '%'||#{search_value}||'%' or board_content like '%'||#{search_value}||'%')
		]]>
	</select>
	
	<select id="blogSearchAddr" parameterType="int" resultType="com.java.board.dto.Board_addr_infoDto">
	
		select * from board_addr_info where board_no=#{board_no}
	 	<!-- select distinct addr_sido,addr_sigugun,addr_dongri,addr_bunji 
	 	from board_addr_info 
	 	where board_no in
	  <foreach collection="boardList" item="item" index="index" open="(" separator="," close=")">
	  	  #{item.board_no}
	 </foreach> -->
	</select>
	
	<select id="blogListResult" parameterType="java.util.HashMap" resultType="com.java.board.dto.BoardDto">
		select board_no,member_id,category_code,board_rgdate,board_content,board_grade,board_count,board_title  
		from board
		where board_no in(select board_no 
		                  from board_addr_info 
		                  where addr_sido=#{sido} and addr_sigugun=#{sigugun} and addr_dongri=#{dongri} and addr_bunji=#{bunji})
		and board_title like '%'||#{searchValue}||'%'
		and board_content like '%'||#{searchValue}||'%'
	</select>
	
	<select id="getreply" parameterType="int" resultType="int">
		select count(reply_no) from reply where board_no=#{boardNo}
	</select>
	
	<update id="readCount" parameterType="int">
		update board set board_count=board_count+1 where board_no=#{boardNo}
	</update>
	
	<select id="getReadList1" parameterType="int" resultType="java.util.HashMap">
	  select b.*,a.addr_sido,a.addr_sigugun,a.addr_dongri,a.addr_bunji,c.category_mname,c.category_sname,
       nvl(r.yes,0) yes, nvl(r.no,0) no
      from board b,board_addr_info a,category c,
           (select board_no, sum(decode(recommand_yn, 'Y', 1)) yes, sum(decode(recommand_yn, 'N', 1)) no
              from recommand
             where board_no=#{board_no}
             group by board_no) r
      where b.board_no=a.board_no
      and b.category_code=c.category_code
      and b.board_no=r.board_no(+)
      and b.board_no=#{board_no}
	</select>
	
	<select id="getblogImg" parameterType="int" resultType="com.java.board.dto.Attach_fileDto">
		select * from attach_file where board_no=#{boardNo}
	</select>
	
	<update id="blogReadReference" parameterType="java.util.HashMap">
	merge into recommand r
	using (select #{member_id} member_id,#{board_no} board_no
           from dual) s
	on (r.member_id = s.member_id and r.board_no = s.board_no)
	when matched then update set r.recommand_yn='Y'
	when not matched then insert (r.recommand_no, r.board_no, r.member_id, r.recommand_yn,r.recommand_date)
	values(RECOMMAND_RECOMMAND_NO_SEQ.nextval, #{board_no}, #{member_id}, 'Y', current_date)
	</update>
	<update id="blogReadNoReference" parameterType="java.util.HashMap">
	merge into recommand r
	using (select #{member_id} member_id,#{board_no} board_no
           from dual) s
	on (r.member_id = s.member_id and r.board_no = s.board_no)
	when matched then update set r.recommand_yn='N'
	when not matched then insert (r.recommand_no, r.board_no, r.member_id, r.recommand_yn,r.recommand_date)
	values(RECOMMAND_RECOMMAND_NO_SEQ.nextval, #{board_no}, #{member_id}, 'N', current_date)
	</update>
	
	<select id="referenceRefresh" parameterType="int" resultType="com.java.boardRead.dto.RecommandDto">
		select board_no, nvl(sum(decode(recommand_yn, 'Y', 1)),0) yes, nvl(sum(decode(recommand_yn, 'N', 1)),0) no
        from recommand
        where board_no=#{board_no}
        group by board_no
    </select>
    
    <insert id="bookMark" parameterType="java.util.HashMap">
    	insert into FAVORITE(favorite_no,member_id,board_no,favorite_rgdate) values(FAVORITE_FAVORITE_NO_SEQ.nextval,#{member_id},#{board_no},current_date)
    </insert>   
    
    <delete id="NobookMark" parameterType="java.util.HashMap">
    	delete from FAVORITE
    	where member_id=#{member_id} 
    	and board_no=#{board_no}
    </delete>
</mapper>