<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
    
<mapper namespace="dao.BoardReadMapper">
		

	<select id="getData" resultType="com.java.boardRead.dto.BoardReadDto">
		select *
		  from category
		 where category_code='200300'
	</select>
	
	<select id="getSidoCondition" resultType="String">
		select distinct loc_sido
		  from location_info
		 order by 1
	</select>
	
	<select id="getHeaderCondition" resultType="String">
		select distinct category_mname
		  from category
		 order by 1
	</select>
	
	<select id="getGunLocationCondition" parameterType="String" resultType="String">
		select distinct nvl(loc_sigugun, 'blank')
		  from location_info
		 where loc_sido = #{siData}
		 order by 1
	</select>
	
	<select id="getDongLocationCondition" parameterType="java.util.HashMap" resultType="String">
		select distinct loc_dongri
		  from location_info
		 where loc_sido = #{siData}
		   and nvl(loc_sigugun,'%') like '%'||#{gunData}||'%'
		 order by 1
	</select>
	
	<select id="getDetailCategoryCondition" parameterType="String" resultType="String">
		select distinct category_sname
		  from category
		 where category_MName=#{headData}
		   and category_sub != '000'
		 order by 1
	</select>
	
	<select id="getboardList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		<![CDATA[
		select a.*,b.addr_title,count(*) over (partition by 1) tot_cnt from board a,board_addr_info b
		where a.board_no=b.board_no
		and a.board_no in(select board_no from 
		board_addr_info 
		where 
		(('%'=#{board_addr_info.addr_sido} and addr_sido like '%') or ('%'<>#{board_addr_info.addr_sido} and addr_sido = #{board_addr_info.addr_sido}))
		and (('%'=#{board_addr_info.addr_sigugun} and addr_sigugun like '%') or ('%'<>#{board_addr_info.addr_sigugun} and addr_sigugun = #{board_addr_info.addr_sigugun}))
		and (('%'=#{board_addr_info.addr_dongri} and addr_dongri like '%') or ('%'<>#{board_addr_info.addr_dongri} and addr_dongri = #{board_addr_info.addr_dongri})))
		and category_code in(select category_code 
		from category 
		where category_mname like '%'||#{category.category_mname}||'%'
		and category_sname like '%'||#{category.category_sname}||'%')
		and (board_title like '%'||#{search_value}||'%' or board_content like '%'||#{search_value}||'%')
		]]>
	</select>
	
	<select id="blogSearchAddr" parameterType="int" resultType="com.java.board.dto.Board_addr_infoDto">
	
		select * from board_addr_info where board_no=#{board_no}
	 	<!-- select distinct addr_sido,addr_sigugun,addr_dongri,addr_bunji 
	 	from board_addr_info 
	 	where board_no in
	  <foreach collection="boardList" item="item" index="index" open="(" separator="," close=")">
	  	  #{item.board_no}
	 </foreach> -->
	</select>
	
	<select id="blogListResult" parameterType="java.util.HashMap" resultType="java.util.HashMap">
		select *
		from (select b.*, f.file_name,
     		   row_number() over (partition by b.board_no order by f.file_no) f_num
 			   from board b,attach_file f
 			   where b.board_no=f.board_no(+)
               and b.board_no in(select board_no 
                     from board_addr_info 
                    where addr_sido=#{sido}
                      and addr_sigugun=#{sigugun}
                      and addr_dongri=#{dongri}
                      and nvl(addr_bunji,'%') = case when #{bunji} is null then '%' else #{bunji} end)
  		       and (board_title like '%'||#{searchValue}||'%' or board_content like '%'||#{searchValue}||'%'))
		where f_num = 1 
<!--    select board_no,member_id,category_code,board_rgdate,board_content,board_grade,board_count,board_title  
		from board
		where board_no in(select board_no 
		                  from board_addr_info 
		                  where addr_sido=#{sido} and addr_sigugun=#{sigugun} and addr_dongri=#{dongri} and nvl(addr_bunji,'%') = case when #{bunji} is null then '%' else #{bunji} end)
        and (board_title like '%'||#{searchValue}||'%' or board_content like '%'||#{searchValue}||'%') -->
	</select>
	
	<select id="getreply" parameterType="int" resultType="int">
		select count(reply_no) from reply where board_no=#{boardNo}
	</select>
	
	<update id="readCount" parameterType="int">
		update board set board_count=board_count+1 where board_no=#{boardNo}
	</update>
	
	<select id="getReadList1" parameterType="int" resultType="java.util.HashMap">
	  select b.*,a.addr_sido,a.addr_sigugun,a.addr_dongri,a.addr_bunji,a.addr_title,c.category_mname,c.category_sname,
       nvl(r.yes,0) yes, nvl(r.no,0) no
      from board b,board_addr_info a,category c,
           (select board_no, sum(decode(recommand_yn, 'Y', 1)) yes, sum(decode(recommand_yn, 'N', 1)) no
              from recommand
             where board_no=#{board_no}
             group by board_no) r
      where b.board_no=a.board_no
      and b.category_code=c.category_code
      and b.board_no=r.board_no(+)
      and b.board_no=#{board_no}
	</select>
	
	<select id="getblogImg" parameterType="int" resultType="com.java.board.dto.Attach_fileDto">
		select * from attach_file where board_no=#{boardNo}
	</select>
	
	<select id="getRecommandBlog" resultType="java.util.HashMap">
	    <![CDATA[
	    select category, board_no, board_title, yes, no, file_name
	      from (select a.category, a.board_no, a.board_title, a.yes, a.no, b.file_no, b.file_name,
	                   row_number() over (partition by a.board_no order by b.file_no) file_seq
	              from (select a.category, a.board_no, a.board_title, a.yes, a.no
	                      from (select category, board_no, board_title, yes, no,
	                                   row_number() over (partition by category order by yes desc, no) rnum
	                              from (select r.board_no, substr(b.category_code, 1, 3) category, b.board_title,
	                                           nvl(sum(decode(r.recommand_yn, 'Y', 1)),0) yes,
	                                           nvl(sum(decode(r.recommand_yn, 'N', 1)),0) no
	                                      from recommand r, board b
	                                     where r.board_no=b.board_no
	                                       and r.recommand_date between current_date-7 and current_date
		                                 group by r.board_no, substr(b.category_code, 1, 3), b.board_title)) a
		                         where rnum <= 5) a,
		                attach_file b
		          where a.board_no=b.board_no)
		   where file_seq = 1
		]]>
	</select>

	<update id="blogReadReference" parameterType="java.util.HashMap">
	merge into recommand r
	using (select #{member_id} member_id,#{board_no} board_no
           from dual) s
	on (r.member_id = s.member_id and r.board_no = s.board_no)
	when matched then update set r.recommand_yn='Y'
	when not matched then insert (r.recommand_no, r.board_no, r.member_id, r.recommand_yn,r.recommand_date)
	values(RECOMMAND_RECOMMAND_NO_SEQ.nextval, #{board_no}, #{member_id}, 'Y', current_date)
	</update>
	<update id="blogReadNoReference" parameterType="java.util.HashMap">
	merge into recommand r
	using (select #{member_id} member_id,#{board_no} board_no
           from dual) s
	on (r.member_id = s.member_id and r.board_no = s.board_no)
	when matched then update set r.recommand_yn='N'
	when not matched then insert (r.recommand_no, r.board_no, r.member_id, r.recommand_yn,r.recommand_date)
	values(RECOMMAND_RECOMMAND_NO_SEQ.nextval, #{board_no}, #{member_id}, 'N', current_date)
	</update>
	
	<select id="referenceRefresh" parameterType="int" resultType="com.java.boardRead.dto.RecommandDto">
		select board_no, nvl(sum(decode(recommand_yn, 'Y', 1)),0) yes, nvl(sum(decode(recommand_yn, 'N', 1)),0) no
        from recommand
        where board_no=#{board_no}
        group by board_no
    </select>
    
    <insert id="bookMark" parameterType="java.util.HashMap">
    	insert into FAVORITE(favorite_no,member_id,board_no,favorite_rgdate) values(FAVORITE_FAVORITE_NO_SEQ.nextval,#{member_id},#{board_no},current_date)
    </insert>   
    
    <delete id="NobookMark" parameterType="java.util.HashMap">
    	delete from FAVORITE
    	where member_id=#{member_id} 
    	and board_no=#{board_no}
    </delete>
    
    <delete id="blogDelete" parameterType="java.util.HashMap">
    	delete from board 
    	where member_id=#{member_id} 
    	and board_no=#{board_no}
    </delete>
    
    <select id="blogUpdate" parameterType="java.util.HashMap" resultType="java.util.HashMap">
    	select b.*,a.addr_sido,a.addr_sigugun,a.addr_dongri,a.addr_bunji,a.addr_title,c.category_mname,c.category_sname,f.file_no,f.file_name,f.file_size,f.file_path,f.file_comment
    	from board b,board_addr_info a,category c,attach_file f
    	 where b.board_no=a.board_no
     	 and b.category_code=c.category_code
      	 and b.board_no=f.board_no(+)
      	 and b.board_no=#{board_no} 
    </select>
    
    <update id="blogUpdateOk" parameterType="java.util.HashMap">
    update board set category_code=(select category_code from category where category_mname=#{boardreadDto.category_mname} and category_sname like '%'||#{boardreadDto.category_sname}||'%'),board_title=#{boardDto.board_title},board_rgdate=current_date,board_content=#{boardDto.board_content},board_grade=#{boardDto.board_grade}
    where board_no=#{boardDto.board_no}
    </update>
    
    <update id="blogUpdateOk_addr" parameterType="java.util.HashMap">
		update board_addr_info set addr_sido=#{board_addr_infoDto.addr_sido}, addr_sigugun=#{board_addr_infoDto.addr_sigugun},addr_dongri=#{board_addr_infoDto.addr_dongri},addr_bunji=#{board_addr_infoDto.addr_bunji},addr_title=#{board_addr_infoDto.addr_title}
		where board_no=#{boardDto.board_no}
	</update>
	
	<update id="blogUpdateOk_attach" parameterType="java.util.HashMap">
			update attach_file
			set file_name=#{attach_file.file_name},
				file_size=#{attach_file.file_size},
				file_path=#{attach_file.file_path},
				file_comment=#{attach_file.file_comment}
			where board_no=#{boardDto.board_no} and file_no=#{attach_file.file_no}
	</update> 
	
	<!-- <select id="blogListResult_check" parameterType="java.util.HashMap" resultType="com.java.board.dto.BoardDto">
		select board_no,member_id,category_code,board_rgdate,board_content,board_grade,board_count,board_title  
		from board
		where board_no in(select board_no 
		                  from board_addr_info 
		                  where addr_sido=#{sido} and addr_sigugun=#{sigugun} and addr_dongri=#{dongri} and nvl(addr_bunji,'%') = case when #{bunji} is null then '%' else #{bunji} end)
        and (board_title like '%'||#{searchValue}||'%' or board_content like '%'||#{searchValue}||'%')
        and member_id = case when 'y' = #{check_value} then #{member_id} else member_id end
	</select> -->
	
	<select id="getboardList_check" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	<![CDATA[
		select a.*,b.addr_title,count(*) over (partition by 1) tot_cnt from board a,board_addr_info b
		where a.board_no=b.board_no
		and a.board_no in(select board_no from 
		board_addr_info 
		where 
		(('%'=#{board_addr_info.addr_sido} and addr_sido like '%') or ('%'<>#{board_addr_info.addr_sido} and addr_sido = #{board_addr_info.addr_sido}))
		and (('%'=#{board_addr_info.addr_sigugun} and addr_sigugun like '%') or ('%'<>#{board_addr_info.addr_sigugun} and addr_sigugun = #{board_addr_info.addr_sigugun}))
		and (('%'=#{board_addr_info.addr_dongri} and addr_dongri like '%') or ('%'<>#{board_addr_info.addr_dongri} and addr_dongri = #{board_addr_info.addr_dongri})))
		and category_code in(select category_code 
		from category 
		where category_mname like '%'||#{category.category_mname}||'%'
		and category_sname like '%'||#{category.category_sname}||'%')
		and (board_title like '%'||#{search_value}||'%' or board_content like '%'||#{search_value}||'%')
		and a.member_id = case when 'y' = #{check_value} then #{member_id} else a.member_id end
		]]>
	
	</select>
	
	<insert id="blogUpdate_insert" parameterType="java.util.HashMap">
		insert into attac_file(file_no,board_no_file_type,file_name,file_size,file_path,file_comment)
		values(ATTACH_FILE_FILE_NO_SEQ.nextval,#{boardDto.board_no},0,#{attach_file.file_name},#{attach_file.file_size},#{attach_file.file_path},#{attach_file.file_comment})
	</insert>
</mapper> 
